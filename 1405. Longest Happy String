https://leetcode.com/problems/longest-happy-string/description/


class Solution {
public:
    string longestDiverseString(int a, int b, int c) {
        priority_queue<pair<int,char>> pq;
        if(a>0)pq.push({a,'a'});
        if(b>0)pq.push({b,'b'});
        if(c>0)pq.push({c,'c'});
        string ans="";
        while(!pq.empty()){
            //cout<<ans<<endl;
            if(pq.size()==1){
                auto p1 = pq.top(); pq.pop();
                if(ans.size()>=2 && ans[ans.size()-1] == p1.second && ans[ans.size()-2] == p1.second){
                    return ans;
                }
                else{
                    ans+=p1.second;
                    p1.first--;
                }
                if(p1.first>0)pq.push(p1);
            }
            else{
                auto p1 = pq.top(); pq.pop();
                if(ans.size()>=2 && ans[ans.size()-1] == p1.second && ans[ans.size()-2] == p1.second){
                    auto p2 = pq.top(); pq.pop();
                    ans+=p2.second;
                    p2.first--;
                    if(p2.first>0)pq.push(p2);
                }
                else{
                    ans+=p1.second;
                    p1.first--;
                }
                if(p1.first>0)pq.push(p1);
            }
        }
        return ans;
    }
};
